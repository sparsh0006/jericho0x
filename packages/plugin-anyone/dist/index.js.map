{"version":3,"sources":["../src/services/AnyoneClientService.ts","../src/services/AnyoneProxyService.ts","../src/actions/startAnyone.ts","../src/actions/stopAnyone.ts","../src/actions/index.ts","../src/index.ts"],"sourcesContent":["import { Anon } from \"@anyone-protocol/anyone-client\";\r\n\r\nexport class AnyoneClientService {\r\n    private static instance: Anon | null = null;\r\n\r\n    static getInstance(): Anon | null {\r\n        return this.instance;\r\n    }\r\n\r\n    static async initialize(): Promise<void> {\r\n        if (!this.instance) {\r\n            this.instance = new Anon({\r\n                displayLog: true,\r\n                socksPort: 9050,\r\n                autoTermsAgreement: true,\r\n            });\r\n            await this.instance.start();\r\n        }\r\n    }\r\n\r\n    static async stop(): Promise<void> {\r\n        if (this.instance) {\r\n            await this.instance.stop();\r\n            this.instance = null;\r\n        }\r\n    }\r\n}\r\n","import { AnonSocksClient } from \"@anyone-protocol/anyone-client\";\r\nimport axios from \"axios\";\r\nimport { AnyoneClientService } from \"./AnyoneClientService\";\r\n\r\nexport class AnyoneProxyService {\r\n    private static instance: AnyoneProxyService | null = null;\r\n    private sockClient: AnonSocksClient | null = null;\r\n    private originalAxios: any = null;\r\n    private originalDefaults: any = null;\r\n\r\n    static getInstance(): AnyoneProxyService {\r\n        if (!AnyoneProxyService.instance) {\r\n            AnyoneProxyService.instance = new AnyoneProxyService();\r\n        }\r\n        return AnyoneProxyService.instance;\r\n    }\r\n\r\n    async initialize(): Promise<void> {\r\n        await AnyoneClientService.initialize();\r\n        const anon = AnyoneClientService.getInstance();\r\n        if (!anon) {\r\n            throw new Error(\"Anyone client not initialized\");\r\n        }\r\n\r\n        this.sockClient = new AnonSocksClient(anon);\r\n\r\n        // Store original axios configuration\r\n        this.originalDefaults = { ...axios.defaults };\r\n        this.originalAxios = {\r\n            request: axios.request,\r\n            get: axios.get,\r\n            post: axios.post,\r\n            put: axios.put,\r\n            delete: axios.delete,\r\n            patch: axios.patch,\r\n        };\r\n\r\n        // Create new defaults object instead of modifying existing one\r\n        axios.defaults = {\r\n            ...axios.defaults,\r\n            ...this.sockClient.axios.defaults,\r\n        };\r\n\r\n        // Apply proxy methods\r\n        axios.request = this.sockClient.axios.request.bind(\r\n            this.sockClient.axios\r\n        );\r\n        axios.get = this.sockClient.axios.get.bind(this.sockClient.axios);\r\n        axios.post = this.sockClient.axios.post.bind(this.sockClient.axios);\r\n        axios.put = this.sockClient.axios.put.bind(this.sockClient.axios);\r\n        axios.delete = this.sockClient.axios.delete.bind(this.sockClient.axios);\r\n        axios.patch = this.sockClient.axios.patch.bind(this.sockClient.axios);\r\n    }\r\n\r\n    cleanup(): void {\r\n        if (this.originalAxios && this.originalDefaults) {\r\n            // Create fresh axios defaults\r\n            axios.defaults = { ...this.originalDefaults };\r\n\r\n            // Create fresh bindings\r\n            axios.request = this.originalAxios.request.bind(axios);\r\n            axios.get = this.originalAxios.get.bind(axios);\r\n            axios.post = this.originalAxios.post.bind(axios);\r\n            axios.put = this.originalAxios.put.bind(axios);\r\n            axios.delete = this.originalAxios.delete.bind(axios);\r\n            axios.patch = this.originalAxios.patch.bind(axios);\r\n\r\n            this.originalAxios = null;\r\n            this.originalDefaults = null;\r\n        }\r\n        AnyoneProxyService.instance = null;\r\n    }\r\n}\r\n","import {\r\n    ActionExample,\r\n    HandlerCallback,\r\n    IAgentRuntime,\r\n    Memory,\r\n    State,\r\n    type Action,\r\n} from \"@elizaos/core\";\r\nimport { AnyoneClientService } from \"../services/AnyoneClientService\";\r\nimport { AnyoneProxyService } from \"../services/AnyoneProxyService\";\r\n\r\nexport const startAnyone: Action = {\r\n    name: \"START_ANYONE\",\r\n    similes: [\"ANYONE\"],\r\n    validate: async (_runtime: IAgentRuntime, _message: Memory) => {\r\n        return true;\r\n    },\r\n    description: \"Start the Anyone client and proxy service\",\r\n    handler: async (\r\n        _runtime: IAgentRuntime,\r\n        _message: Memory,\r\n        _state: State,\r\n        _options: { [key: string]: unknown },\r\n        _callback: HandlerCallback\r\n    ): Promise<boolean> => {\r\n        await AnyoneClientService.initialize();\r\n        //lint says unused\r\n        //const anon = AnyoneClientService.getInstance();\r\n        const proxyService = AnyoneProxyService.getInstance();\r\n        await proxyService.initialize();\r\n\r\n        _callback({\r\n            text: `Started Anyone`,\r\n        });\r\n\r\n        return true;\r\n    },\r\n    examples: [\r\n        [\r\n            {\r\n                user: \"{{user1}}\",\r\n                content: { text: \"Can you start Anyone for me?\" },\r\n            },\r\n            {\r\n                user: \"{{user2}}\",\r\n                content: {\r\n                    text: \"I'll start Anyone right away\",\r\n                    action: \"START_ANYONE\",\r\n                },\r\n            },\r\n        ],\r\n        [\r\n            {\r\n                user: \"{{user1}}\",\r\n                content: { text: \"Initialize the Anyone client please\" },\r\n            },\r\n            {\r\n                user: \"{{user2}}\",\r\n                content: {\r\n                    text: \"Starting Anyone now\",\r\n                    action: \"START_ANYONE\",\r\n                },\r\n            },\r\n        ],\r\n        [\r\n            {\r\n                user: \"{{user1}}\",\r\n                content: { text: \"I need to start using Anyone\" },\r\n            },\r\n            {\r\n                user: \"{{user2}}\",\r\n                content: {\r\n                    text: \"I'll help you start Anyone\",\r\n                    action: \"START_ANYONE\",\r\n                },\r\n            },\r\n        ],\r\n        [\r\n            {\r\n                user: \"{{user1}}\",\r\n                content: { text: \"Launch Anyone for me\" },\r\n            },\r\n            {\r\n                user: \"{{user2}}\",\r\n                content: {\r\n                    text: \"I'll launch Anyone for you now\",\r\n                    action: \"START_ANYONE\",\r\n                },\r\n            },\r\n        ],\r\n    ] as ActionExample[][],\r\n} as Action;\r\n","import {\r\n    ActionExample,\r\n    HandlerCallback,\r\n    IAgentRuntime,\r\n    Memory,\r\n    State,\r\n    type Action,\r\n} from \"@elizaos/core\";\r\nimport { AnyoneClientService } from \"../services/AnyoneClientService\";\r\nimport { AnyoneProxyService } from \"../services/AnyoneProxyService\";\r\n\r\nexport const stopAnyone: Action = {\r\n    name: \"STOP_ANYONE\",\r\n    similes: [\"STOP_PROXY\"],\r\n    validate: async (_runtime: IAgentRuntime, _message: Memory) => {\r\n        return true;\r\n    },\r\n    description: \"Stop the Anyone client and proxy service\",\r\n    handler: async (\r\n        _runtime: IAgentRuntime,\r\n        _message: Memory,\r\n        _state: State,\r\n        _options: { [key: string]: unknown },\r\n        _callback: HandlerCallback\r\n    ): Promise<boolean> => {\r\n        const proxyService = AnyoneProxyService.getInstance();\r\n        proxyService.cleanup();\r\n\r\n        await AnyoneClientService.stop();\r\n\r\n        _callback({\r\n            text: `Stopped Anyone and cleaned up proxy`,\r\n        });\r\n\r\n        return true;\r\n    },\r\n    examples: [\r\n        [\r\n            {\r\n                user: \"{{user1}}\",\r\n                content: { text: \"Can you stop Anyone for me?\" },\r\n            },\r\n            {\r\n                user: \"{{user2}}\",\r\n                content: {\r\n                    text: \"I'll stop Anyone right away\",\r\n                    action: \"STOP_ANYONE\",\r\n                },\r\n            },\r\n        ],\r\n        [\r\n            {\r\n                user: \"{{user1}}\",\r\n                content: { text: \"Please shut down Anyone\" },\r\n            },\r\n            {\r\n                user: \"{{user2}}\",\r\n                content: {\r\n                    text: \"Stopping Anyone now\",\r\n                    action: \"STOP_ANYONE\",\r\n                },\r\n            },\r\n        ],\r\n        [\r\n            {\r\n                user: \"{{user1}}\",\r\n                content: { text: \"I need to stop using Anyone\" },\r\n            },\r\n            {\r\n                user: \"{{user2}}\",\r\n                content: {\r\n                    text: \"I'll help you stop Anyone\",\r\n                    action: \"STOP_ANYONE\",\r\n                },\r\n            },\r\n        ],\r\n        [\r\n            {\r\n                user: \"{{user1}}\",\r\n                content: { text: \"Close Anyone for me\" },\r\n            },\r\n            {\r\n                user: \"{{user2}}\",\r\n                content: {\r\n                    text: \"I'll close Anyone for you now\",\r\n                    action: \"STOP_ANYONE\",\r\n                },\r\n            },\r\n        ],\r\n    ] as ActionExample[][],\r\n} as Action;\r\n","export * from \"./startAnyone.ts\";\r\nexport * from \"./stopAnyone.ts\";\r\n","import { Plugin } from \"@elizaos/core\";\r\nimport { startAnyone } from \"./actions/startAnyone.ts\";\r\nimport { stopAnyone } from \"./actions/stopAnyone.ts\";\r\nexport * as actions from \"./actions\";\r\n\r\nexport const anyonePlugin: Plugin = {\r\n    name: \"anyone\",\r\n    description: \"Proxy requests through Anyone\",\r\n    actions: [startAnyone, stopAnyone],\r\n};\r\n"],"mappings":";;;;;;;AAAA,SAAS,YAAY;AAEd,IAAM,sBAAN,MAA0B;AAAA,EAC7B,OAAe,WAAwB;AAAA,EAEvC,OAAO,cAA2B;AAC9B,WAAO,KAAK;AAAA,EAChB;AAAA,EAEA,aAAa,aAA4B;AACrC,QAAI,CAAC,KAAK,UAAU;AAChB,WAAK,WAAW,IAAI,KAAK;AAAA,QACrB,YAAY;AAAA,QACZ,WAAW;AAAA,QACX,oBAAoB;AAAA,MACxB,CAAC;AACD,YAAM,KAAK,SAAS,MAAM;AAAA,IAC9B;AAAA,EACJ;AAAA,EAEA,aAAa,OAAsB;AAC/B,QAAI,KAAK,UAAU;AACf,YAAM,KAAK,SAAS,KAAK;AACzB,WAAK,WAAW;AAAA,IACpB;AAAA,EACJ;AACJ;;;AC1BA,SAAS,uBAAuB;AAChC,OAAO,WAAW;AAGX,IAAM,qBAAN,MAAM,oBAAmB;AAAA,EAC5B,OAAe,WAAsC;AAAA,EAC7C,aAAqC;AAAA,EACrC,gBAAqB;AAAA,EACrB,mBAAwB;AAAA,EAEhC,OAAO,cAAkC;AACrC,QAAI,CAAC,oBAAmB,UAAU;AAC9B,0BAAmB,WAAW,IAAI,oBAAmB;AAAA,IACzD;AACA,WAAO,oBAAmB;AAAA,EAC9B;AAAA,EAEA,MAAM,aAA4B;AAC9B,UAAM,oBAAoB,WAAW;AACrC,UAAM,OAAO,oBAAoB,YAAY;AAC7C,QAAI,CAAC,MAAM;AACP,YAAM,IAAI,MAAM,+BAA+B;AAAA,IACnD;AAEA,SAAK,aAAa,IAAI,gBAAgB,IAAI;AAG1C,SAAK,mBAAmB,EAAE,GAAG,MAAM,SAAS;AAC5C,SAAK,gBAAgB;AAAA,MACjB,SAAS,MAAM;AAAA,MACf,KAAK,MAAM;AAAA,MACX,MAAM,MAAM;AAAA,MACZ,KAAK,MAAM;AAAA,MACX,QAAQ,MAAM;AAAA,MACd,OAAO,MAAM;AAAA,IACjB;AAGA,UAAM,WAAW;AAAA,MACb,GAAG,MAAM;AAAA,MACT,GAAG,KAAK,WAAW,MAAM;AAAA,IAC7B;AAGA,UAAM,UAAU,KAAK,WAAW,MAAM,QAAQ;AAAA,MAC1C,KAAK,WAAW;AAAA,IACpB;AACA,UAAM,MAAM,KAAK,WAAW,MAAM,IAAI,KAAK,KAAK,WAAW,KAAK;AAChE,UAAM,OAAO,KAAK,WAAW,MAAM,KAAK,KAAK,KAAK,WAAW,KAAK;AAClE,UAAM,MAAM,KAAK,WAAW,MAAM,IAAI,KAAK,KAAK,WAAW,KAAK;AAChE,UAAM,SAAS,KAAK,WAAW,MAAM,OAAO,KAAK,KAAK,WAAW,KAAK;AACtE,UAAM,QAAQ,KAAK,WAAW,MAAM,MAAM,KAAK,KAAK,WAAW,KAAK;AAAA,EACxE;AAAA,EAEA,UAAgB;AACZ,QAAI,KAAK,iBAAiB,KAAK,kBAAkB;AAE7C,YAAM,WAAW,EAAE,GAAG,KAAK,iBAAiB;AAG5C,YAAM,UAAU,KAAK,cAAc,QAAQ,KAAK,KAAK;AACrD,YAAM,MAAM,KAAK,cAAc,IAAI,KAAK,KAAK;AAC7C,YAAM,OAAO,KAAK,cAAc,KAAK,KAAK,KAAK;AAC/C,YAAM,MAAM,KAAK,cAAc,IAAI,KAAK,KAAK;AAC7C,YAAM,SAAS,KAAK,cAAc,OAAO,KAAK,KAAK;AACnD,YAAM,QAAQ,KAAK,cAAc,MAAM,KAAK,KAAK;AAEjD,WAAK,gBAAgB;AACrB,WAAK,mBAAmB;AAAA,IAC5B;AACA,wBAAmB,WAAW;AAAA,EAClC;AACJ;;;AC7DO,IAAM,cAAsB;AAAA,EAC/B,MAAM;AAAA,EACN,SAAS,CAAC,QAAQ;AAAA,EAClB,UAAU,OAAO,UAAyB,aAAqB;AAC3D,WAAO;AAAA,EACX;AAAA,EACA,aAAa;AAAA,EACb,SAAS,OACL,UACA,UACA,QACA,UACA,cACmB;AACnB,UAAM,oBAAoB,WAAW;AAGrC,UAAM,eAAe,mBAAmB,YAAY;AACpD,UAAM,aAAa,WAAW;AAE9B,cAAU;AAAA,MACN,MAAM;AAAA,IACV,CAAC;AAED,WAAO;AAAA,EACX;AAAA,EACA,UAAU;AAAA,IACN;AAAA,MACI;AAAA,QACI,MAAM;AAAA,QACN,SAAS,EAAE,MAAM,+BAA+B;AAAA,MACpD;AAAA,MACA;AAAA,QACI,MAAM;AAAA,QACN,SAAS;AAAA,UACL,MAAM;AAAA,UACN,QAAQ;AAAA,QACZ;AAAA,MACJ;AAAA,IACJ;AAAA,IACA;AAAA,MACI;AAAA,QACI,MAAM;AAAA,QACN,SAAS,EAAE,MAAM,sCAAsC;AAAA,MAC3D;AAAA,MACA;AAAA,QACI,MAAM;AAAA,QACN,SAAS;AAAA,UACL,MAAM;AAAA,UACN,QAAQ;AAAA,QACZ;AAAA,MACJ;AAAA,IACJ;AAAA,IACA;AAAA,MACI;AAAA,QACI,MAAM;AAAA,QACN,SAAS,EAAE,MAAM,+BAA+B;AAAA,MACpD;AAAA,MACA;AAAA,QACI,MAAM;AAAA,QACN,SAAS;AAAA,UACL,MAAM;AAAA,UACN,QAAQ;AAAA,QACZ;AAAA,MACJ;AAAA,IACJ;AAAA,IACA;AAAA,MACI;AAAA,QACI,MAAM;AAAA,QACN,SAAS,EAAE,MAAM,uBAAuB;AAAA,MAC5C;AAAA,MACA;AAAA,QACI,MAAM;AAAA,QACN,SAAS;AAAA,UACL,MAAM;AAAA,UACN,QAAQ;AAAA,QACZ;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AACJ;;;AChFO,IAAM,aAAqB;AAAA,EAC9B,MAAM;AAAA,EACN,SAAS,CAAC,YAAY;AAAA,EACtB,UAAU,OAAO,UAAyB,aAAqB;AAC3D,WAAO;AAAA,EACX;AAAA,EACA,aAAa;AAAA,EACb,SAAS,OACL,UACA,UACA,QACA,UACA,cACmB;AACnB,UAAM,eAAe,mBAAmB,YAAY;AACpD,iBAAa,QAAQ;AAErB,UAAM,oBAAoB,KAAK;AAE/B,cAAU;AAAA,MACN,MAAM;AAAA,IACV,CAAC;AAED,WAAO;AAAA,EACX;AAAA,EACA,UAAU;AAAA,IACN;AAAA,MACI;AAAA,QACI,MAAM;AAAA,QACN,SAAS,EAAE,MAAM,8BAA8B;AAAA,MACnD;AAAA,MACA;AAAA,QACI,MAAM;AAAA,QACN,SAAS;AAAA,UACL,MAAM;AAAA,UACN,QAAQ;AAAA,QACZ;AAAA,MACJ;AAAA,IACJ;AAAA,IACA;AAAA,MACI;AAAA,QACI,MAAM;AAAA,QACN,SAAS,EAAE,MAAM,0BAA0B;AAAA,MAC/C;AAAA,MACA;AAAA,QACI,MAAM;AAAA,QACN,SAAS;AAAA,UACL,MAAM;AAAA,UACN,QAAQ;AAAA,QACZ;AAAA,MACJ;AAAA,IACJ;AAAA,IACA;AAAA,MACI;AAAA,QACI,MAAM;AAAA,QACN,SAAS,EAAE,MAAM,8BAA8B;AAAA,MACnD;AAAA,MACA;AAAA,QACI,MAAM;AAAA,QACN,SAAS;AAAA,UACL,MAAM;AAAA,UACN,QAAQ;AAAA,QACZ;AAAA,MACJ;AAAA,IACJ;AAAA,IACA;AAAA,MACI;AAAA,QACI,MAAM;AAAA,QACN,SAAS,EAAE,MAAM,sBAAsB;AAAA,MAC3C;AAAA,MACA;AAAA,QACI,MAAM;AAAA,QACN,SAAS;AAAA,UACL,MAAM;AAAA,UACN,QAAQ;AAAA,QACZ;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AACJ;;;AC1FA;AAAA;AAAA;AAAA;AAAA;;;ACKO,IAAM,eAAuB;AAAA,EAChC,MAAM;AAAA,EACN,aAAa;AAAA,EACb,SAAS,CAAC,aAAa,UAAU;AACrC;","names":[]}